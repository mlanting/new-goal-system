#
# Copyright (c) 2010, Soar Technology, Inc.
# All rights reserved.
# 
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
# 
# * Redistributions of source code must retain the above copyright notice, this
#   list of conditions and the following disclaimer.
# 
# * Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the following disclaimer in the
#   documentation and/or other materials provided with the distribution.
# 
# * Neither the name of Soar Technology, Inc. nor the names of its contributors
#   may be used to endorse or promote products derived from this software
#   without the specific prior written permission of Soar Technology, Inc.
# 
# THIS SOFTWARE IS PROVIDED BY SOAR TECHNOLOGY, INC. AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL SOAR TECHNOLOGY, INC. OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER 
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, 
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE 
# USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#

##!
# @brief This file contains productions for removing old considerables.  It's in a separate file because
#        it should not be loaded if the user has implied (by unsetting NGS_UNCONSIDERED_ITEM_REMOVAL_TIMEOUT) that 
#        old considerables should not time-out of the terminated pool.


########################################################
## UNCONSIDERED POOL TIMEOUT REMOVAL (CLEANUPS)
########################################################

##!
# @brief When a goal becomes terminated (is in the terminated set),
# put a timeout on it

sp "ngs*terminated-considerable*set-timeout
:o-support
   (state <s> ^$terminated_considerable <con>
              ^$master_time <time>)    
   (<con> ^tags <tags>)
   [NGS_is-not-tagged <con> removal-timeout]
-->
   (<tags> ^removal-timeout (+ $NGS_UNCONSIDERED_ITEM_REMOVAL_TIMEOUT <time>))
"

##!
# @brief When a terminated considerables' timeout is past,
#  remove it altogether from working memory.

sp "ngs*terminated-considerable*remove-on-timeout
:o-support
   (state <s> ^$terminated_considerables <cons>
              ^$master_time <time>)
   (<cons>   ^<ngs_considerable_type> <con>)
   [NGS_is-most-derived-type <con> <mdt>]
   [NGS_is-tagged <con> removal-timeout {<= <time>} ]           
 ;# It is not the case that a considerable with a post-action has not acted on all post-actions
 -{(<con> ^postaction <a-postaction> 
         -^tags.post-actions-handled )}
-->
   (<cons> ^<ngs_considerable_type> <con> -)
   #(write (crlf) |  ...  Removing terminated | <ngs_considerable_type> | due to non-consideration and timeout : | <mdt>)
"
